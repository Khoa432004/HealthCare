version: '3.8'

services:
  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: healthcare-app
    ports:
      - "8080:8080"
    environment:
      # Database Configuration
      - SPRING_DATASOURCE_URL=${DATABASE_URL:-jdbc:postgresql://db:5432/healthcare_db}
      - SPRING_DATASOURCE_USERNAME=${DATABASE_USERNAME:-postgres}
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD:-postgres}
      
      # JPA Configuration
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=false
      
      # Redis Configuration
      - SPRING_DATA_REDIS_HOST=${REDIS_HOST:-redis}
      - SPRING_DATA_REDIS_PORT=${REDIS_PORT:-6379}
      
      # JWT Configuration
      - SECURITY_JWT_SECRET=${JWT_SECRET:-ZmFrZV9iYXNlNjRfc2VjcmV0X2NoYW5nZV9tZV9sYXRlcg==}
      - SECURITY_JWT_EXPIRATION_MS=${JWT_EXPIRATION_MS:-86400000}
      - SECURITY_JWT_REFRESH_EXPIRATION_MS=${JWT_REFRESH_EXPIRATION_MS:-604800000}
      
      # Email Configuration
      - SPRING_MAIL_HOST=${MAIL_HOST:-smtp.gmail.com}
      - SPRING_MAIL_PORT=${MAIL_PORT:-587}
      - SPRING_MAIL_USERNAME=${MAIL_USERNAME}
      - SPRING_MAIL_PASSWORD=${MAIL_PASSWORD}
      
      # Server Configuration
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-prod}
    
    depends_on:
      - db
      - redis
    
    restart: unless-stopped
    
    networks:
      - healthcare-network
    
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: healthcare-db
    environment:
      - POSTGRES_DB=healthcare_db
      - POSTGRES_USER=${DATABASE_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Uncomment to initialize with SQL dump
      # - ./ehealthcare_db_1-0.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - healthcare-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: healthcare-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - healthcare-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  healthcare-network:
    driver: bridge

